# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2             # checkout code
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1.3.0           # setup java 1.8 on the server
        with:
          java-version: 1.8
      - name: Cache maven packages            # cache maven dependencies
        uses: actions/cache@v1.2.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Execute unit tests      # test
        run: mvn -B verify --file pom.xml
      #- name: Upload coverage to Codecov      # code coverage badge
      #  uses: codecov/codecov-action@v1
      #  with:
      #    token: ${{ secrets.CODECOV_TOKEN }}
      #- name: SonarCloud Scan
      #  uses: SonarSource/sonarcloud-github-action@v1.2
      #  with:
          # Set the sonar.projectBaseDir analysis property
      #    projectBaseDir: .# optional, default is .
      - name: Build with maven                # build
        run: mvn -B package --file pom.xml
      #- run: mkdir master && cp target/*.jar master
      #- name: Upload artifacts
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: Package
      #    path: master
      - name: Publish to github packages
        run: |
          mkdir ~/.m2
          echo "<settings><servers><server><id>github</id><username>palyfight</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
