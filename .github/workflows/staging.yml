# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: PR Dev to Staging

on:
  pull_request:
    branches: [ staging ]

jobs:

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2             # checkout code
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1           # setup java 1.8 on the server
        with:
          java-version: 1.8
      - name: Cache Maven packages            # cache maven dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Maven Compile             # We need to compile the code for errorProne
        run: mvn compile -DskipTests
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify --file pom.xml
      #- name: Create directory to persist artifacts
      #  run: mkdir staging && cp target/*.jar staging
      #- name: Upload artifacts
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: Package
      #    path: staging

  sonar:
    needs: test
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2             # checkout code
        with:
          fetch-depth: ''
      - run: git fetch --prune --unshallow --quiet
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      #- name: Download artifacts from test job
      #  uses: actions/download-artifact@v1
      #  with:
      #    name: Package
      - name: SonarCloud Scan
        run: mvn verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }} sonar:sonar
        #run: mvn -B verify sonar:sonar -Dsonar.projectKey=palyfight_SimpleRegexApi -Dsonar.organization=palyfight -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
